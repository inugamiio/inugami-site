<xml>


    <!--***********************************************************************
    * GAV
    ***********************************************************************-->
    <src name="gav">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>
    <version>1.6.3</version>

    <extension>true</extension>
    <executions>
        <execution>
            <id>check</id>
            <phase>analyze</phase>
            <goals>
                <goal>check</goal>
            </goals>
        </execution>
        <execution>
            <id>info</id>
            <phase>info</phase>
            <goals>
                <goal>retrieveInformation</goal>
            </goals>
        </execution>
    </executions>
</plugin>
]]>
    </src>


    <!--***********************************************************************
    * gav_inugami-project-analysis-maven-plugin-annotations
    ***********************************************************************-->
    <src name="gav_inugami-project-analysis-maven-plugin-annotations">
        <![CDATA[
<dependency>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin-annotations</artifactId>
    <version>1.6.3</version>
</dependency>
]]>
    </src>


    <src name="gav_inugami-project-analysis-front-springboot">
        <![CDATA[
    <dependency>
        <groupId>io.inugami.maven.plugin.analysis.front</groupId>
        <artifactId>inugami-project-analysis-front-springboot</artifactId>
        <version>1.6.3</version>
    </dependency>
    ]]>
    </src>


    <!--***********************************************************************
    * gav_inugami-project-analysis-maven-plugin-annotations
    ***********************************************************************-->
    <src name="gav_inugami_api">
        <![CDATA[
<dependencies>
    <groupId>io.inugami</groupId>
    <artifactId>inugami_api</artifactId>
    <version>2.1.0</version>
</dependencies>
]]>
    </src>


    <!--***********************************************************************
    * docker_compose
    ***********************************************************************-->
    <src name="docker_compose">
        <![CDATA[
    version: "3"
    services:
      neo4j:
        image: neo4j:4.1.1
        ports:
          - "7474:7474"
          - "7473:7473"
          - "7687:7687"
        expose:
          - 7474
          - 7473
          - 7687
        environment:
          - NEO4J_AUTH=neo4j/password
          - EXTENSION_SCRIPT=/var/lib/neo4j/import/neo4j-bootstrap.sh
          - NEO4J_dbms_unmanaged__extension__classes=semantics.extension=/rdf
          - NEO4J_dbms_security_procedures_whitelist=apoc.coll.*,apoc.load.*,semantics.*
          - NEO4J_dbms_security_procedures_unrestricted=apoc.*,semantics.*
          - NEO4J_apoc_export_file_enabled=true
          - NEO4J_apoc_import_file_enabled=true
          - NEO4J_apoc_import_file_use__neo4j__config=true
        volumes:
          - ./import:/var/lib/neo4j/import
          - ./conf:/var/lib/neo4j/conf
          - ./logs:/var/lib/neo4j/logs
          - ./plugins:/var/lib/neo4j/plugins
        networks:
          - neo4j-network
    networks:
      neo4j-network:
        driver: bridge
    ]]>
    </src>


    <!--***********************************************************************
    * neo4j_indexes
    ***********************************************************************-->
    <src name="neo4j_indexes">
        <![CDATA[
# Neo4j 5.x :
# ===================================================================================
CREATE INDEX idx_Artifact FOR (n:Artifact) ON (n.name,n.groupId,n.artifactId,n.packaging,n.shortName,n.version);
CREATE INDEX idx_Version FOR (n:Version) ON (n.name, n.uid,n.artifactId,n.groupId,n.major,n.minor,n.packaging,n.patch,n.tag,n.version);
CREATE INDEX idx_ErrorCode FOR (n:ErrorCode) ON (n.exploitationError,n.name,n.errorCode,n.message,n.shortName,n.statusCode, n.category);
CREATE INDEX idx_ErrorType FOR (n:ErrorType) ON (n.name,n.shortName);
CREATE INDEX idx_Service FOR (n:Service) ON (n.accept,n.autoStartup,n.bindings,n.containerFactory,n.contentType,n.converterWinsContentType,n.destination,n.errorHandler,n.event,n.exclusive,n.identifier,n.listenerId,n.method,n.name,n.payload,n.queue,n.queuesToDeclare,n.requestPayload,n.responsePayload,n.uid,n.uri,n.verb);
CREATE INDEX idx_ServiceType FOR (n:ServiServiceTypece) ON (n.name, n.uid);
CREATE INDEX idx_Method FOR (n:Method) ON (n.name, n.uid,n.class,n.method,n.parameters,n.returnType);
CREATE INDEX idx_Property FOR (n:Property) ON (n.name, n.uid,n.mandatory,n.propertyType );
CREATE INDEX idx_INPUT_DTO FOR (n:INPUT_DTO) ON (n.name, n.uid);
CREATE INDEX idx_OUTPUT_DTO FOR (n:OUTPUT_DTO) ON (n.name, n.uid);
CREATE INDEX idx_LocalEntity FOR (n:LocalEntity) ON (n.name, n.uid,n.payload);
CREATE INDEX idx_Entity FOR (n:Entity) ON (n.name, n.uid,n.payload);
CREATE INDEX idx_Scm FOR (n:Scm) ON (n.name, n.uid,n.commit);
CREATE INDEX idx_Author FOR (n:Author) ON (n.name, n.uid,n.email);

# Neo4j 4.x :
# ===================================================================================
CREATE INDEX ON :Artifact(name,groupId,artifactId,packaging,shortName,version);
CREATE INDEX ON :Version(name, uid,artifactId,groupId,major,minor,packaging,patch,tag,version );

CREATE INDEX ON :ErrorCode(exploitationError,name,errorCode,message,shortName,statusCode);
CREATE INDEX ON :ErrorType(name,shortName);


CREATE INDEX ON :Service(accept,autoStartup,bindings,containerFactory,contentType,converterWinsContentType,destination,errorHandler,event,exclusive,identifier,listenerId,method,name,payload,queue,queuesToDeclare,requestPayload,responsePayload,uid,uri,verb);
CREATE INDEX ON :ServiceType(name, uid);

CREATE INDEX ON :Method(name, uid,class,method,parameters,returnType);

CREATE INDEX ON :Property(name, uid,mandatory,propertyType );

CREATE INDEX ON :INPUT_DTO(name, uid);
CREATE INDEX ON :OUTPUT_DTO(name, uid);

CREATE INDEX ON :LocalEntity(name, uid,payload);
CREATE INDEX ON :Entity(name, uid,payload);


CREATE INDEX ON :Scm(name, uid,commit);
CREATE INDEX ON :Author(name, uid,email);
]]>
    </src>


    <!--***********************************************************************
    * neo4j_structure
    ***********************************************************************-->
    <src name="neo4j_structure">
        <![CDATA[
CALL db.schema.visualization
]]>
    </src>

    <!--***********************************************************************
    * info_restServices
    ***********************************************************************-->
    <src name="info_restServices">
        <![CDATA[
mvn info -Daction=restServices
]]>
    </src>

    <!--***********************************************************************
    * info_queryDisplay
    ***********************************************************************-->
    <src name="info_queryDisplay">
        <![CDATA[
mvn info -Daction=queryDisplay
]]>
    </src>

    <!--***********************************************************************
    * info_search_services_rest
    ***********************************************************************-->
    <src name="info_search_services_rest">
        <![CDATA[
mvn info -Daction=queryDisplay -Dquery=search_services_rest
]]>
    </src>

    <!--***********************************************************************
    * info_search_error_codes
    ***********************************************************************-->
    <src name="info_search_error_codes">
        <![CDATA[
mvn info -Daction=queryDisplay -Dquery=search_error_codes
]]>
    </src>


    <!--***********************************************************************
    * info_queueInfo
    ***********************************************************************-->
    <src name="info_queueInfo">
        <![CDATA[
mvn info -Daction=queueInfo
]]>
    </src>


    <!--***********************************************************************
    * info_queue_jms_sender
    ***********************************************************************-->
    <src name="info_queue_jms_sender">
        <![CDATA[
@JmsSender(destination = "${my.activeMq.onUserCreated.queue}", id = "create.user.queue")
public void sendCreateUser(final String someParameter, @JmsEvent final User user) {
    // process sending event
}
]]>
    </src>

    <!--***********************************************************************
    * info_queue_rabbit_sender
    ***********************************************************************-->
    <src name="info_queue_rabbit_sender">
        <![CDATA[
@RabbitMqSender(echangeName = "${events.exchangeName}",
                queue = "${events.method.user.queueName}",
                routingKey = "${events.user.method.created.routingKey}"
)
public void fireEvent(@RabbitMqEvent  final UserCreatedEvent event) {
    // process sending event
}
]]>
    </src>


    <!--***********************************************************************
    * info_queue_rabbit_handler
    ***********************************************************************-->
    <src name="info_queue_rabbit_handler">
        <![CDATA[
@RabbitMqHandlerInfo(routingKey = "${events.user.authenticated.routingKey}",
typeId = "${events.user.authenticated.typeId}")
@RabbitHandler
public void onAuthenticated(final UserAuthenticatedEvent event) {
    // process listen
}
]]>
    </src>


    <!--***********************************************************************
    * info_errorDisplay
    ***********************************************************************-->
    <src name="info_errorDisplay">
        <![CDATA[
mvn info -Daction=errorDisplay
]]>
    </src>

    <src name="errorCode">
        <![CDATA[
    package io.inugami.api.exceptions;
    public interface ErrorCode {
    
    
        public ErrorCode getCurrentErrorCode();
    
        default int getStatusCode() {
            return getCurrentErrorCode() == null ? 500 : getCurrentErrorCode().getStatusCode();
        }
    
    
        default String getErrorCode() {
            return getCurrentErrorCode() == null ? "undefine" : getCurrentErrorCode().getErrorCode();
        }
    
    
        default String getMessage() {
            return getCurrentErrorCode() == null ? "error" : getCurrentErrorCode().getMessage();
        }
    
    
        default String getMessageDetail() {
            return getCurrentErrorCode() == null ? null : getCurrentErrorCode().getMessageDetail();
        }
    
        default boolean isExploitationError() {
            return getCurrentErrorCode() == null ? false : getCurrentErrorCode().isExploitationError();
        }
    
        default String getErrorType() {
            return getCurrentErrorCode() == null ? "technical" : getCurrentErrorCode().getErrorType();
        }
    
    
        default String getPayload() {
            return getCurrentErrorCode() == null ? null : getCurrentErrorCode().getPayload();
        }
    
    
        default boolean isRollbackRequire() {
            return getCurrentErrorCode() == null ? false : getCurrentErrorCode().isRollbackRequire();
        }
    
        default boolean isRetryable() {
            return getCurrentErrorCode() == null ? false : getCurrentErrorCode().isRetryable();
        }
    
        default BiConsumer<String, Exception> getErrorHandler() {
            return getCurrentErrorCode() == null ? null : getCurrentErrorCode().getErrorHandler();
        }
    
        default ErrorCode addDetail(String detail, Object... values) {
            return toBuilder().addMessageDetail(detail, values).build();
        }
        
        default String getCategory() {
            return getCurrentErrorCode() == null ? null : getCurrentErrorCode().getCategory();
        }
    
    
        default DefaultErrorCode.DefaultErrorCodeBuilder toBuilder() {
            DefaultErrorCode.DefaultErrorCodeBuilder builder = null;
            if (getCurrentErrorCode() == null) {
                builder = DefaultErrorCode.fromErrorCode(DefaultErrorCode.buildUndefineError());
            }
            else {
                builder = DefaultErrorCode.fromErrorCode(getCurrentErrorCode());
            }
            return builder;
        }
    }
    ]]>
    </src>


    <src name="errorCodeEnum">
        <![CDATA[
public enum IssuesError implements ErrorCode {

    ISSUES_1(newBuilder()
            .setStatusCode(400)
            .setMessage("issues request invalid")
            .setErrorType("input")),

    ISSUES_1_1(newBuilder()
            .setStatusCode(400)
            .setMessage("issue uid is mandatory")
            .setFonctionnalError());

    private final ErrorCode errorCode;

    private IssuesError(final ErrorCodeBuilder errorBuilder) {
        errorCode = errorBuilder.setErrorCode(this.name()).build();
    }

    @Override
    public ErrorCode getCurrentErrorCode() {
        return errorCode;
    }
}
]]>
    </src>


    <src name="errorCode_override">
        <![CDATA[
<properties>
    <inugami.maven.plugin.analysis.analyzer.errorCode.interface>
        you.project.ErrorCode
    </inugami.maven.plugin.analysis.analyzer.errorCode.interface>
</properties>
]]>
    </src>


    <!--***********************************************************************
    * maven_pom_properties
    ***********************************************************************-->
    <src name="maven_pom_properties">
        <![CDATA[
    <properties>
        <inugami.maven.plugin.analysis.project.base.name>your.base.package</inugami.maven.plugin.analysis.project.base.name>
        <inugami.maven.plugin.analysis.writer.neo4j.url>bolt://localhost:7687</inugami.maven.plugin.analysis.writer.neo4j.url>
        <inugami.maven.plugin.analysis.writer.neo4j.user>neo4j</inugami.maven.plugin.analysis.writer.neo4j.user>
        <inugami.maven.plugin.analysis.writer.neo4j.password>password</inugami.maven.plugin.analysis.writer.neo4j.password>
    </properties>
]]>
    </src>

    <!--***********************************************************************
    * maven_settings
    ***********************************************************************-->
    <src name="maven_settings">
        <![CDATA[
    <servers>
        <servers>
            <id>neo4j</id>
            <username>neo4j</username>
            <password>{Yt5nGluOZ0sHzEiL7Le2IHFjtuTonkfx4yVEG3CYzZ8=}</password>
            <configuration>
                <url>bolt://localhost:7687</url>
            </configuration>
        </servers>
    </servers>
]]>
    </src>


    <!--***********************************************************************
    * mvn_analyze
    ***********************************************************************-->
    <src name="mvn_analyze">
        <![CDATA[
mvn analyze
]]>
    </src>

    <!--***********************************************************************
    * maven_settings
    ***********************************************************************-->
    <src name="mvn_info">
        <![CDATA[
    mvn info
]]>
    </src>

    <!--***********************************************************************
    * mvn_info_specificsQuery
    ***********************************************************************-->
    <src name="mvn_info_specificsQuery">
        <![CDATA[
mvn info -Daction=specificsQuery -Dexport=true
]]>
    </src>

    <!--***********************************************************************
    * mvn_info_specificsQuery
    ***********************************************************************-->
    <src name="mvn_info_importData">
        <![CDATA[
mvn info -Daction=importData
]]>
    </src>

    <src name="mvn_info_importData_example">
        <![CDATA[
{
    "nodes": [
        {
        "type": "String",
        "uid": "String",
        "name": "String",
        "properties": {
            "<String>": "Serializable",
            "<String>": 42
        }
        }
    ],
    "nodesToDeletes": ["String"],
    "createScripts" : ["String(Cypher)"],
    "relationships": [
        {
        "from": "String",
        "to": "String",
        "type": "String",
        "properties": {
            "<String>": "Serializable"
        }
        }
    ],
    "relationshipsToDeletes": [
        {
        "from": "String",
        "to": "String",
        "type": "String",
        "properties": {
            "<String>": "Serializable"
        }
        }
    ],
    "deleteScripts": ["String(Cypher)"]
    }
]]>
    </src>

    <!--***********************************************************************
    * mvn_info_publish
    ***********************************************************************-->
    <src name="mvn_info_publish">
        <![CDATA[
mvn info -Daction=publish
]]>
    </src>

    <!--***********************************************************************
    * mvn_info_unpublish
    ***********************************************************************-->
    <src name="mvn_info_unpublish">
        <![CDATA[
mvn info -Daction=unpublish
]]>
    </src>


    <!--***********************************************************************
    * mvn_info_versionEnv
    ***********************************************************************-->
    <src name="mvn_info_versionEnv">
        <![CDATA[
mvn info -Daction=versionEnv
]]>
    </src>


    <!--***********************************************************************
    * mvn_info_envInfo
    ***********************************************************************-->
    <src name="mvn_info_envInfo">
        <![CDATA[
mvn info -Daction=envInfo
]]>
    </src>


    <!--***********************************************************************
    * mvn_info_encodePassword
    ***********************************************************************-->
    <src name="mvn_info_encodePassword">
        <![CDATA[
mvn info -Daction=encodePassword
]]>
    </src>


    <!--***********************************************************************
    * mvn_info_releaseNote
    ***********************************************************************-->
    <src name="mvn_info_releaseNote">
        <![CDATA[
mvn info -Daction=releaseNote -PpreviousVersion={previousVersion}
]]>
    </src>

    <!--***********************************************************************
    * mvn_info_issue_gitlab
    ***********************************************************************-->
    <src name="mvn_info_issue_gitlab">
        <![CDATA[
<issueManagement>
    <system>gitlab</system>
    <url>https://gitlab.com/api/v4/projects/123457890</url>
</issueManagement>
]]>
    </src>

    <!--***********************************************************************
    * mvn_info_issue_github
    ***********************************************************************-->
    <src name="mvn_info_issue_github">
        <![CDATA[
<issueManagement>
    <system>github</system>
    <url>https://api.github.com/repos/inugamiio/inugami-project-analysis-maven-plugin-parent</url>
</issueManagement>
]]>
    </src>

    <!--***********************************************************************
    * mvn_info_issue_jira
    ***********************************************************************-->
    <src name="mvn_info_issue_jira">
        <![CDATA[
<issueManagement>
    <system>jira</system>
    <url>https://jira.url</url>
</issueManagement>
]]>
    </src>

    <src name="mvn_info_issue_jira_settings">
        <![CDATA[
<servers>
    <server>
        <id>gitlab</id>
        <privateKey>{MIAuTFbZUxsHC0aBub3Frxr1d/kik/yafcVYW6KDzqU=}</privateKey>
    </server>

    <server>
        <id>github</id>
        <privateKey>{s5Ydy14rYAwHekKyJxAYAFnFO6igA9/lykiQCT+ct8U=}</privateKey>
    </server>

    <server>
        <id>jira</id>
        <username>{1Jur5y14rYAwHekKyJxAYAFnFO6igA9/lyki+ct8U=}</username>
        <password>{s5Ydy14rYAwHekKyJxAYAFnFO6igA9/lykiQCT+ct8U=}</password>
    </server>
</servers>
]]>
    </src>


    <src name="mvn_info_issue_jira_custom_fields">
        <![CDATA[
public interface JiraCustomFieldsAppender {
    void append(String issueId,
                JsonNode json,
                LinkedHashMap<String, Serializable> issueProperties,
                ScanNeo4jResult neo4jResult);
}
]]>
    </src>
    <src name="mvn_info_issue_jira_custom_fields_spi">
        <![CDATA[
io.app.JiraCustomFieldExtractor
]]>
    </src>

    <src name="mvn_info_issue_jira_custom_fields_spi_impl">
        <![CDATA[
package io.app;

public class JiraCustomFieldExtractor implements JiraCustomFieldsAppender {
    public void append(String issueId,
                JsonNode json,
                LinkedHashMap<String, Serializable> issueProperties,
                ScanNeo4jResult neo4jResult){
        // implementation
    }
}
]]>
    </src>


    <!--***********************************************************************
    * mvn_info_releaseNote
    ***********************************************************************-->
    <src name="mvn_info_releaseNote">
        <![CDATA[
mvn info -Daction=releaseNote -PpreviousVersion={previousVersion}
]]>
    </src>


    <!--***********************************************************************
    * mvn_info_releaseNote
    ***********************************************************************-->
    <src name="dependenciesCheckService">
        <![CDATA[
public interface DependenciesCheckService {
    DependenciesCheck getDependenciesCheckData();
}
]]>
    </src>
    <src name="myProjectConfiguration">
        <![CDATA[
@Configuration
public class MyProjectConfiguration {

    @Primary
    @Bean
    public DependenciesCheck buildDependenciesCheck(){
        return new MyDependenciesCheckService();
    }
}
]]>
    </src>
    <src name="DependenciesCheck">
        <![CDATA[
@ToString
@Builder(toBuilder = true)
@Setter
@Getter
public class DependenciesCheck {
    private List<DependencyRule> deprecated;
    private List<DependencyRule> ban;
    private List<DependencyRule> securityIssue;
}
]]>
    </src>
    <src name="DependencyRule">
        <![CDATA[
@ToString
@Builder(toBuilder = true)
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@Setter
@Getter
public class DependencyRule {
    @EqualsAndHashCode.Include
    private String       groupId;
    @EqualsAndHashCode.Include
    private String       artifactId;
    @EqualsAndHashCode.Include
    private VersionRules rules;
    private String       comment;
    private String       link;
    private Level        level;
}
]]>
    </src>


    <!--***********************************************************************
    * goal_mkdirs
    ***********************************************************************-->
    <src name="goal_mkdirs">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>

    <executions>
        <execution>
            <id>mkdirs</id>
            <phase>validate</phase>
            <goals>
                <goal>mkdirs</goal>
            </goals>
            <configuration>
                <paths>
                    <path>${basedir}/target/test</path>
                    <path>${basedir}/target/test2</path>
                </paths>
            </configuration>
        </execution>
    </executions>
</plugin>
    ]]>
    </src>


    <!--***********************************************************************
    * goal_delete
    ***********************************************************************-->
    <src name="goal_delete">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>

    <executions>
        <execution>
            <id>mkdirs</id>
            <phase>validate</phase>
            <goals>
                <goal>delete</goal>
            </goals>
            <configuration>
                <paths>
                    <path>${basedir}/target/test.*</path>
                    <path>${basedir}/target/generate/.*log</path>
                </paths>
            </configuration>
        </execution>
    </executions>
</plugin>
    ]]>
    </src>


    <!--***********************************************************************
    * goal_loadProperties
    ***********************************************************************-->
    <src name="goal_loadProperties">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>
    
    <executions>
        <execution>
            <id>loadProperties</id>
            <phase>validate</phase>
            <goals>
                <goal>loadProperties</goal>
            </goals>
            <configuration>
                <properties>
                    <simple.properties>joe</simple.properties>
                </properties>
            </configuration>
        </execution>
    </executions>
</plugin>
]]>
    </src>


    <src name="goal_loadProperties_local_01">
        <![CDATA[
application.name=demo-app
application.title=My application
]]>
    </src>


    <src name="goal_loadProperties_local_02">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>
    <version>1.6.3</version>

    <executions>
        <execution>
            <id>loadProperties</id>
            <phase>validate</phase>
            <goals>
                <goal>loadProperties</goal>
            </goals>
            <configuration>
                <properties>
                    <simple.properties>joe</simple.properties>
                </properties>
                <resources>
                    <resource>
                        <type>properties</type>
                        <propertiesPath>${basedir}/src/test/resources/simple.properties</propertiesPath>
                        <properties>
                            <specific.file.properties>specific value</specific.file.properties>
                        </properties>
                    </resource>
                </resources>
            </configuration>
        </execution>
    </executions>
</plugin>
]]>
    </src>

    <src name="goal_loadProperties_local_03">
        <![CDATA[
{
    "version": "0.0.1-SNAPSHOT",
    "app": {
        "name": "my application"
    },
    "rules": [
        {
        "type": "json",
        "enabled": "true"
        },
        {
        "type": "yaml",
        "enabled": "false"
        }
    ],
    "authors": [
        "john",
        "smith"
    ]
}
]]>
    </src>

    <src name="goal_loadProperties_local_04">
        <![CDATA[
{
    "version" : "0.0.1-SNAPSHOT",
    "app.name" : "my application",
    "rules.0.type" : "json",
    "rules.0.enabled" : "true",
    "rules.1.type" : "yaml",
    "rules.1.enabled" : "false",
    "authors.0" : "john",
    "authors.1" : "smith"
}
]]>
    </src>


    <!--***********************************************************************
    * goal_loadProperties
    ***********************************************************************-->
    <src name="PropertiesConvertorSpi">
        <![CDATA[
public interface PropertiesConvertorSpi {
    boolean accept(final String type);

    Map<String, String> convert(final String content);
}
]]>
    </src>
    <src name="PropertiesConvertorSpi_spi">
        <![CDATA[
io.inugami.maven.plugin.analysis.plugin.services.build.convertors.MyConverto
]]>
    </src>
    <src name="PropertiesConvertorSpi_impl">
        <![CDATA[
@SpiPriority(10)
public class MyConvertor implements PropertiesConvertorSpi {

    public static final String PROPERTIES = "properties";


    @Override
    public boolean accept(final String type) {
        return PROPERTIES.equalsIgnoreCase(type);
    }

    @Override
    public Map<String, String> convert(final String content) {
        // implementation
    }
}
]]>
    </src>


    <!--***********************************************************************
    * goal_loadProperties
    ***********************************************************************-->
    <src name="loadProperties_external">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>

    <executions>
        <execution>
            <id>loadProperties</id>
            <phase>validate</phase>
            <goals>
                <goal>loadProperties</goal>
            </goals>
            <configuration>
                <resources>
                    <resource>
                        <propertiesUrl>http://localhost:8888/demo.json</propertiesUrl>
                        <propertiesUrlAuthorization>Basic YWRtaW46cGFzc3dvcmQ=</propertiesUrlAuthorization>
                    </resource>
                </resources>
            </configuration>
        </execution>
    </executions>
</plugin>
]]>
    </src>

    <src name="loadProperties_external_01">
        <![CDATA[
{
    "external": {
        "applicationName": "externalJson"
    }
}
]]>
    </src>

    <src name="loadProperties_external_02">
        <![CDATA[
{
    "external.applicationName" : "externalJson"
}
]]>
    </src>

    <!--***********************************************************************
    * goal_loadProperties
    ***********************************************************************-->
    <src name="writeFile">
        <![CDATA[
    <plugin>
        <groupId>io.inugami.maven.plugin.analysis</groupId>
        <artifactId>inugami-project-analysis-maven-plugin</artifactId>
    
        <executions>
            <execution>
                <id>loadProperties</id>
                <phase>generate-resources</phase>
                <goals>
                    <goal>writeFile</goal>
                </goals>
                <configuration>
                    <mavenFiltering>true</mavenFiltering>
                    <fileResources>
                        <fileResource>
                            <target>${basedir}/target/file.from.innerTemplate.html</target>
                            <template>
    <h1>${project.artifactId}</h1>
    <h2>{{subtitle}}</h2>
                        </template>
                        <properties>
                            <subtitle>Simple inner template rendering</subtitle>
                        </properties>
                    </fileResource>
                </fileResources>
            </configuration>
        </execution>
    </executions>
</plugin>
]]>
    </src>

    <src name="writeFile_01">
        <![CDATA[
<h1>demo</h1>
<h2>Simple inner template rendering</h2>
]]>
    </src>

    <src name="writeFile_02">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>

    <executions>
        <execution>
            <id>loadProperties</id>
            <phase>generate-resources</phase>
            <goals>
                <goal>writeFile</goal>
            </goals>
            <configuration>
                <mavenFiltering>true</mavenFiltering>
                <fileResources>
                    <fileResource>
                        <target>${basedir}/target/file.from.externalTemplate.html</target>
                        <templatePath>${basedir}/src/test/resources/simple.template.html</templatePath>
                        <properties>
                            <subtitle>Simple external template rendering</subtitle>
                            <description>With external template, you can create more complex file without
                                pollute your maven pom.xml
                            </description>
                        </properties>
                    </fileResource>
                </fileResources>
            </configuration>
        </execution>
    </executions>
</plugin>
]]>
    </src>


    <src name="writeFile_03">
        <![CDATA[
<h1>demo</h1>
<h2>Simple external template rendering</h2>

<p>
With external template, you can create more complex file without
                                pollute your maven pom.xml
</p>
]]>
    </src>


    <src name="writeFile_04">
        <![CDATA[
<h1>${project.artifactId}</h1>
<h2>{{subtitle}}</h2>

<p>
    {{description}}
</p>
]]>
    </src>


    <!--***********************************************************************
    * copy_01
    ***********************************************************************-->
    <src name="copy_01">
        <![CDATA[
<h1>${project.artifactId}</h1>
<h2>{{subtitle}}</h2>

<p>
    {{description}}
</p>
]]>
    </src>

    <src name="copy_02">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>

    <executions>
        <execution>
            <id>loadProperties</id>
            <phase>generate-resources</phase>
            <goals>
                <goal>copy</goal>
            </goals>
            <configuration>
                <mavenFiltering>true</mavenFiltering>
                <resources>
                    <resource>
                        <target>${basedir}/target/generated/file.from.externalTemplate.html</target>
                        <path>${basedir}/src/test/resources/simple.template.html</path>
                        <properties>
                            <subtitle>Simple copy</subtitle>
                            <description>Lorem ipsum</description>
                        </properties>
                    </resource>
                </resources>
            </configuration>
        </execution>
    </executions>
    </plugin>
]]>
    </src>

    <src name="copy_03">
        <![CDATA[
<h1>demo</h1>
<h2>Simple copy</h2>

<p>
    Lorem ipsum
</p>
]]>
    </src>

    <src name="copy_folers">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>

    <executions>
        <execution>
            <id>loadProperties</id>
            <phase>generate-resources</phase>
            <goals>
                <goal>copy</goal>
            </goals>
            <configuration>
                <mavenFiltering>true</mavenFiltering>
                <resources>
                    <resource>
                        <target>${basedir}/target/generated/template</target>
                        <path>${basedir}/src/test/resources/template</path>
                        <properties>
                            <subtitle>Simple copy</subtitle>
                            <description>Lorem ipsum</description>
                        </properties>
                    </resource>
                </resources>
            </configuration>
        </execution>
    </executions>
</plugin>
]]>
    </src>
    <src name="copy_dependencies">
        <![CDATA[
<plugin>
    <groupId>io.inugami.maven.plugin.analysis</groupId>
    <artifactId>inugami-project-analysis-maven-plugin</artifactId>

    <executions>
        <execution>
            <id>loadProperties</id>
            <phase>generate-resources</phase>
            <goals>
                <goal>copy</goal>
            </goals>
            <configuration>
                <mavenFiltering>true</mavenFiltering>
                <resources>
                    <resource>
                        <target>${basedir}/target/maven/io.inugami.maven.plugin.analysis.front.jar</target>
                        <gav>io.inugami.maven.plugin.analysis.front:inugami-project-analysis-front-plugins:1.6.2-SNAPSHOT</gav>
                    </resource>
                </resources>
            </configuration>
        </execution>
    </executions>
</plugin>
]]>
    </src>


    <src name="unpack">
        <![CDATA[
    <plugin>
        <groupId>io.inugami.maven.plugin.analysis</groupId>
        <artifactId>inugami-project-analysis-maven-plugin</artifactId>
        <executions>
            <execution>
                <id>loadProperties</id>
                <phase>generate-resources</phase>
                <goals>
                    <goal>unpack</goal>
                </goals>
                <configuration>
                    <filtering>true</filtering>
                    <mavenFiltering>true</mavenFiltering>
                    <resources>
                        <resource>
                            <target>${basedir}/target/unpack</target>
                            <gav>
                                io.inugami.maven.plugin.analysis.front:inugami-project-analysis-front-plugins:1.6.2-SNAPSHOT
                            </gav>
                        </resource>
                    </resources>
                </configuration>
            </execution>
        </executions>
    </plugin>
]]>
    </src>
</xml>
